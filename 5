#!/usr/bin/python3
import re
M = []
S = []
Y=2000000
for l in [l.strip() for l in open("SENSOR", "r").readlines()]:
    R = re.search("Sensor at x=([^,]*), y=([^:]*): closest beacon is at x=([^,]*), y=([\-0-9]*)", l)
    sx, sy, bx, by = int(R.group(1)), int(R.group(2)), int(R.group(3)), int(R.group(4)) 
    d = abs(sx - bx) + abs(sy - by) - abs(sy - Y)
    if d >= 0:
        M.append((sx - d, sx + d))
M = sorted(M, key=lambda m: m[0])
C=0
X=M[0][0]
for m in M:
    if X < m[1]:
        C += m[1] - max(X, m[0])
        X = max(X, m[1])
print("29", C)

M = []
for l in [l.strip() for l in open("SENSOR", "r").readlines()]:
    R = re.search("Sensor at x=([^,]*), y=([^:]*): closest beacon is at x=([^,]*), y=([\-0-9]*)", l)
    sx, sy, bx, by = int(R.group(1)), int(R.group(2)), int(R.group(3)), int(R.group(4)) 
    M.append((sx, sy, abs(sx - bx) + abs(sy - by)))
Y = 2628000 
F = None
while Y < 4000000 and not F:
    L = []
    for m in M:
        d = m[2] - abs(m[1] - Y)
        if d >= 0:
            L.append((m[0] - d, m[0] + d))
    L = sorted(L, key=lambda m: m[0])
    D = []
    X=L[0][1]
    for l in L:
        if l[0] > X + 1:
            X = X + 1
            F = (X, Y)
            break
        X = max(X, l[1])
    if F:
        break
    Y += 1
print("30", X * 40000000 + Y)
