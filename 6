#!/usr/bin/python3
import re
import collections

P = {}
C = {}
for l in [l.strip() for l in open("PRESSURE", "r").readlines()]:
    R = re.search("Valve ([A-Z]*) has flow rate=([0-9]*); tunnels? leads? to valves? (.*)", l)
    v, p, c = R.group(1), int(R.group(2)), R.group(3).split(", ")
    P[v] = p 
    C[v] = c

def dto(p):
    d = collections.defaultdict(lambda: 1000)
    d[p] = 0
    W = [p]
    while len(W) > 0:
        w = W.pop()
        for c in C[w]:
            o = d[c]
            d[c] = min(d[c], d[w] + 1)
            if o != d[c]:
                W.append(c)
    return d
D = {}
for p in P:
    if P[p] > 0 or p == 'AA':
        D[p] = dto(p)

def V(p="AA", O=[], t=0, T=0):
    if t >= 28:
        return T
    O.append(p)
    R = T
    d = D[p]
    for c in d:
        if P[c] == 0 or c in O:
            continue
        R = max(R, V(c, O, t + d[c]+1, T + ((30 - (t + d[c] + 1)) * P[c])))
    O.pop()
    return R
print("31", V())

def W(p="AA", p2="AA", O=[], t=0, t2=0, T=0):
    if t >= 24:
        return T
    R = T
    d = D[p]
    for c in d:
        if P[c] == 0 or c in O:
            continue
        O.append(c)
        R = max(R, W(p2, c, O, t2, t + d[c]+1, T + ((26 - (t + d[c] + 1)) * P[c])))
        O.pop()
    return R
print("31", W())
